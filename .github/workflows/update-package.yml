name: Update Package.json Script

on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message for the update'
        default: 'Update generate-css script to use convert-theme-tokens.js'
        required: true

jobs:
  update-package-json:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create update script
        run: |
          cat > update-package.js << 'EOF'
          import fs from 'fs';

          async function updatePackageJson() {
            try {
              const packageJsonPath = 'package.json';
              
              // Read the current package.json
              console.log(`Reading ${packageJsonPath}...`);
              const packageJsonData = await fs.promises.readFile(packageJsonPath, 'utf8');
              const packageJson = JSON.parse(packageJsonData);
              
              // Check if the generate-css script exists
              if (packageJson.scripts && packageJson.scripts['generate-css']) {
                const oldScript = packageJson.scripts['generate-css'];
                
                // Only update if the script is using JsonToCssSplit.js directly
                if (oldScript.includes('JsonToCssSplit.js')) {
                  // Update to use convert-theme-tokens.js instead
                  packageJson.scripts['generate-css'] = "node src/utils/convert-theme-tokens.js";
                  console.log(`Updated generate-css script from "${oldScript}" to "node src/utils/convert-theme-tokens.js"`);
                  
                  // Write the updated package.json
                  await fs.promises.writeFile(
                    packageJsonPath, 
                    JSON.stringify(packageJson, null, 2) + '\n',
                    'utf8'
                  );
                  
                  console.log('Updated package.json successfully');
                  return true;
                } else {
                  console.log(`generate-css script is already set to "${oldScript}", no update needed`);
                  return false;
                }
              } else {
                console.log('Could not find generate-css script in package.json');
                return false;
              }
            } catch (error) {
              console.error('Error updating package.json:', error);
              return false;
            }
          }

          updatePackageJson()
            .then(updated => {
              if (updated) {
                console.log('Successfully updated package.json.');
              } else {
                console.log('No changes were made to package.json.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              process.exit(1);
            });
          EOF
      
      - name: Run update script
        run: |
          node update-package.js
      
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add package.json
          
          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected in package.json"
            git commit -m "${{ github.event.inputs.commit_message }}"
            git push
          else
            echo "No changes detected in package.json"
          fi