name: Theme Tokens Conversion

on:
  pull_request:
    paths:
      - 'src/styles/theme.json'
  push:
    branches:
      - main
    paths:
      - 'src/styles/theme.json'
  workflow_dispatch:
    inputs:
      message:
        description: 'Commit message'
        required: false
        default: 'Manual theme token generation'

jobs:
  convert-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Debug theme.json
        run: |
          ls -la src/styles/theme.json
          echo "Theme file size: $(stat -c%s src/styles/theme.json) bytes"
      
      - name: Clean theme.json file
        run: |
          node -e "
            const fs = require('fs');
            const path = require('path');
            const themePath = path.join(process.cwd(), 'src', 'styles', 'theme.json');
            
            try {
              // Read the theme file
              const themeData = JSON.parse(fs.readFileSync(themePath, 'utf8'));
              
              // Clean the $themes array if it exists
              if (themeData.$themes && Array.isArray(themeData.$themes)) {
                console.log('$themes array size before cleaning:', themeData.$themes.length);
                themeData.$themes = [];
                console.log('Cleaned $themes array in theme.json');
              } else {
                console.log('No $themes array found or already empty');
              }
              
              // Write the cleaned file back
              fs.writeFileSync(themePath, JSON.stringify(themeData, null, 2));
              console.log('Wrote cleaned theme.json file');
              console.log('New file size:', fs.statSync(themePath).size, 'bytes');
            } catch (error) {
              console.error('Error processing theme.json:', error);
              process.exit(1);
            }
          "
      
      - name: Generate CSS only (skip full build)
        run: npm run generate-css
      
      - name: List generated CSS files
        run: |
          echo "CSS files generated:"
          ls -la src/styles/generated.css
          ls -la src/styles/theme-files/ || echo "theme-files directory not found"
      
      - name: Check for changes in CSS
        id: css-check
        run: |
          git diff --name-status src/styles/
          changes=$(git status --porcelain src/styles/)
          if [ -n "$changes" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in CSS files"
          else
            echo "No changes detected in CSS files"
          fi
      
      - name: Commit changes if needed
        if: steps.css-check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add src/styles/
          git commit -m "Auto-generate CSS files from theme tokens"
          git push