name: Theme Tokens Conversion

on:
  pull_request:
    paths:
      - 'src/styles/theme.json'
  push:
    branches:
      - main
      - tokens-update
    paths:
      - 'src/styles/theme.json'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update CSS files even if no changes detected'
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true 

jobs:
  convert-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Verify theme.json
        run: |
          echo "Contents of theme.json:"
          cat src/styles/theme.json
          echo "Size of theme.json:"
          ls -l src/styles/theme.json
      
      - name: Create theme processor
        run: |
          cat > process-theme.js << 'EOF'
          import fs from 'fs';
          import path from 'path';

          async function processTheme() {
            try {
              // Read the original theme file
              const themePath = 'src/styles/theme.json';
              console.log(`Reading theme file from ${themePath}...`);
              
              // Check if file exists
              if (!fs.existsSync(themePath)) {
                console.error(`ERROR: Theme file not found at ${themePath}`);
                process.exit(1);
              }

              const themeData = await fs.promises.readFile(themePath, 'utf8');
              console.log(`Theme file read: ${themeData.length} bytes`);
              
              // Parse the theme JSON
              console.log('Parsing theme JSON...');
              const theme = JSON.parse(themeData);
              console.log('Theme parsed successfully');
              
              // Create output directory
              const outputDir = 'src/styles/theme-files';
              console.log(`Ensuring output directory exists: ${outputDir}`);
              
              if (!fs.existsSync(outputDir)) {
                fs.mkdirSync(outputDir, { recursive: true });
                console.log(`Created output directory: ${outputDir}`);
              }
              
              // Detailed logging about theme processing
              const modeKeys = Object.keys(theme).filter(key => key.startsWith('Modes/'));
              console.log(`Found ${modeKeys.length} mode keys`);
              modeKeys.forEach(key => console.log(`Processing mode: ${key}`));
              
              const platformKeys = Object.keys(theme).filter(key => key.startsWith('Platform/'));
              console.log(`Found ${platformKeys.length} platform keys`);
              platformKeys.forEach(key => console.log(`Processing platform: ${key}`));
              
              // Additional processing steps...
              console.log('Theme processing completed successfully');
              
            } catch (error) {
              console.error('FATAL ERROR during theme processing:', error);
              process.exit(1);
            }
          }
          
          // Run the processing
          processTheme();
          EOF
      
      - name: Run theme processor
        run: |
          node process-theme.js
      
      - name: Check generated files
        run: |
          echo "Generated CSS files:"
          find src/styles/theme-files -name "*.css" || echo "No CSS files found"
          
          echo "Total files generated:"
          find src/styles/theme-files -type f | wc -l
      
      - name: Debugging information
        run: |
          echo "Current directory contents:"
          pwd
          ls -la
          
          echo "src/styles contents:"
          ls -la src/styles
          
          echo "src/styles/theme-files contents:"
          ls -la src/styles/theme-files || echo "theme-files directory does not exist"
      
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are any changes
          if [[ -n "$(git status --porcelain src/styles/theme-files)" ]]; then
            echo "Changes detected in theme-files"
            git add src/styles/theme-files/
            git commit -m "Generate theme CSS files with custom processor" || echo "Nothing to commit"
            git push || echo "Nothing to push"
          else
            echo "No changes detected in theme-files"
          fi